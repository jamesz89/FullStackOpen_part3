{"version":3,"sources":["services/personService.js","components/Person.js","components/Filter.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","newBaseUrl","delete","value","put","Person","props","person","name","number","onClick","handleClick","Filter","onChange","PersonForm","onSubmit","type","Notification","message","className","App","useState","persons","setPersons","values","setValues","filter","setfilter","setMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","addPerson","personObj","returnedPerson","concat","displayMessage","updatePerson","map","catch","error","displayErrorMessage","deletePerson","personToDelete","window","confirm","setTimeout","event","console","log","target","preventDefault","existingPerson","find","toLowerCase","includes","filteredPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7dd1fd45.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const newBaseUrl = `${baseUrl}/${id}`\r\n    const request = axios.delete(newBaseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, value) => {\r\n    const newBaseUrl = `${baseUrl}/${id}`\r\n    const request = axios.put(newBaseUrl, value)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Person = (props) => {\r\n    return (\r\n        <p>\r\n            {props.person.name} | {props.person.number} <button onClick={() => props.handleClick(props.person)}>Delete</button>\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n      <div>\r\n        Search:<input\r\n          value={props.value}\r\n          onChange={props.onChange} />\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.onSubmit}>\r\n        <div>\r\n          Name:<input\r\n            value={props.value.name}\r\n            onChange={props.onChange}\r\n            name=\"name\" \r\n            />\r\n        </div>\r\n        <div>\r\n          Number:<input\r\n            value={props.value.number}\r\n            onChange={props.onChange} \r\n            name=\"number\"\r\n            />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">Add or Update</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={type}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useEffect, useState } from 'react'\r\n\r\nimport personService from './services/personService'\r\nimport Person from './components/Person'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const initialValues = {\r\n    name: \"\",\r\n    number: \"\"\r\n  }\r\n  const [values, setValues] = useState(initialValues)\r\n  const [filter, setfilter] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n\r\n  }, [])\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  const handleFilter = (event) => {\r\n    console.log(event.target.value)\r\n    setfilter(event.target.value)\r\n  }\r\n\r\n  const checkPerson = (event) => {\r\n    event.preventDefault()\r\n    const existingPerson = persons.find(person => values.name.toLowerCase() === person.name.toLowerCase())\r\n    if (existingPerson) {\r\n      updatePerson(existingPerson.id)\r\n    } else {\r\n      addPerson()\r\n    }\r\n  }\r\n\r\n  const addPerson = () => {\r\n    const personObj = {\r\n      name: values.name,\r\n      number: values.number\r\n    }\r\n    personService\r\n      .create(personObj)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson))\r\n        displayMessage('New contact added')\r\n      })\r\n    setValues({\r\n      name: '',\r\n      number: ''\r\n    })\r\n  }\r\n\r\n  const updatePerson = (id) => {\r\n    personService\r\n      .update(id, values)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\r\n        displayMessage(`${returnedPerson.name}'s phone number has been updated to ${returnedPerson.number}`)\r\n      })\r\n      .catch(error => {\r\n        displayErrorMessage(\"Error: the person you want to update doesn't exist in the server\")\r\n      })\r\n\r\n    setValues({\r\n      name: '',\r\n      number: ''\r\n    })\r\n  }\r\n\r\n  const deletePerson = personToDelete => {\r\n    if (window.confirm(`Do you want to delete ${personToDelete.name}?`)) {\r\n      personService.remove(personToDelete.id)\r\n        .then(() => {\r\n          setPersons(persons.filter(person => person.id !== personToDelete.id))\r\n          displayMessage(`${personToDelete.name} has beed removed from the phonebook`)\r\n        })\r\n        .catch(error => {\r\n          displayErrorMessage(\"Error: the person you want to delete doesn't exist in the server\")\r\n        })\r\n    }\r\n  }\r\n\r\n  const displayMessage = (message) => {\r\n    setMessage(message)\r\n    setTimeout(() => {\r\n      setMessage(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const displayErrorMessage = (message) => {\r\n    setErrorMessage(message)\r\n    setTimeout(() => {\r\n      setErrorMessage(null)\r\n    }, 5000)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} type=\"success\" />\r\n      <Notification message={errorMessage} type=\"error\" />\r\n      <Filter\r\n        value={filter}\r\n        onChange={handleFilter}\r\n      />\r\n      <h2>Add new</h2>\r\n      <PersonForm\r\n        onSubmit={checkPerson}\r\n        value={values}\r\n        onChange={handleInputChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      {persons.filter(person =>\r\n        person.name.toLowerCase().includes(filter.toLowerCase())).map(filteredPersons => {\r\n          return (\r\n            <Person\r\n              key={filteredPersons.name}\r\n              person={filteredPersons}\r\n              handleClick={deletePerson}\r\n            />\r\n          )\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}